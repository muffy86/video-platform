import React, { useState, useEffect } from 'react';\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { CheckCircle, XCircle, AlertCircle, Loader2, ExternalLink } from \"lucide-react\";\n\ninterface APIStatus {\n  name: string;\n  key: string;\n  status: 'checking' | 'valid' | 'invalid' | 'missing';\n  message: string;\n  setupUrl: string;\n  priority: 'high' | 'medium' | 'low';\n  benefits: string[];\n  cost: string;\n}\n\nexport default function APIConfigChecker() {\n  const [apiStatuses, setApiStatuses] = useState<APIStatus[]>([\n    {\n      name: 'OpenRouter',\n      key: process.env.REACT_APP_OPENROUTER_API_KEY || '',\n      status: 'missing',\n      message: 'Demo key active - upgrade for better models',\n      setupUrl: 'https://openrouter.ai',\n      priority: 'high',\n      benefits: ['Access to GPT-4o, Claude 3.5', '10x higher rate limits', 'Better AI responses'],\n      cost: 'Free tier + $5 credit'\n    },\n    {\n      name: 'OpenAI',\n      key: process.env.REACT_APP_OPENAI_API_KEY || '',\n      status: 'missing', \n      message: 'Required for advanced voice and vision features',\n      setupUrl: 'https://platform.openai.com',\n      priority: 'high',\n      benefits: ['GPT-4 Vision analysis', 'Realtime voice API', 'DALL-E integration'],\n      cost: '$5 free credit'\n    },\n    {\n      name: 'Remove.bg',\n      key: process.env.REACT_APP_REMOVE_BG_API_KEY || '',\n      status: 'missing',\n      message: 'Enhances background removal quality',\n      setupUrl: 'https://www.remove.bg/api',\n      priority: 'medium',\n      benefits: ['Professional background removal', 'Better object isolation', 'AR accuracy'],\n      cost: '50 images/month free'\n    },\n    {\n      name: 'Deepgram',\n      key: process.env.REACT_APP_DEEPGRAM_API_KEY || '',\n      status: 'missing',\n      message: 'Improves speech recognition accuracy',\n      setupUrl: 'https://deepgram.com',\n      priority: 'medium', \n      benefits: ['Better voice recognition', 'Construction vocabulary', 'Noise handling'],\n      cost: '$200 free credit'\n    },\n    {\n      name: 'Perplexity',\n      key: process.env.REACT_APP_PERPLEXITY_API_KEY || '',\n      status: 'missing',\n      message: 'Enables real-time research capabilities',\n      setupUrl: 'https://www.perplexity.ai/settings/api',\n      priority: 'low',\n      benefits: ['Building code research', 'Material pricing', 'Code compliance'],\n      cost: 'Limited free tier'\n    }\n  ]);\n\n  const [isChecking, setIsChecking] = useState(false);\n\n  useEffect(() => {\n    checkAPIKeys();\n  }, []);\n\n  const checkAPIKeys = async () => {\n    setIsChecking(true);\n    \n    const updatedStatuses = await Promise.all(\n      apiStatuses.map(async (api) => {\n        if (!api.key || api.key.includes('your_') || api.key.includes('demo')) {\n          return { ...api, status: 'missing' as const };\n        }\n        \n        try {\n          const isValid = await validateAPIKey(api.name.toLowerCase(), api.key);\n          return {\n            ...api,\n            status: isValid ? 'valid' as const : 'invalid' as const,\n            message: isValid ? 'API key is valid and working' : 'API key is invalid or expired'\n          };\n        } catch (error) {\n          return {\n            ...api,\n            status: 'invalid' as const,\n            message: 'Unable to validate API key'\n          };\n        }\n      })\n    );\n    \n    setApiStatuses(updatedStatuses);\n    setIsChecking(false);\n  };\n\n  const validateAPIKey = async (apiName: string, key: string): Promise<boolean> => {\n    // Simple validation - just check if key format looks correct\n    switch (apiName) {\n      case 'openrouter':\n        return key.startsWith('sk-or-v1-') && key.length > 20;\n      case 'openai':\n        return key.startsWith('sk-') && key.length > 20;\n      case 'remove.bg':\n        return key.length > 10 && !key.includes('your_');\n      case 'deepgram':\n        return key.length > 20;\n      case 'perplexity':\n        return key.startsWith('pplx-') || key.length > 15;\n      default:\n        return false;\n    }\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'checking':\n        return <Loader2 className=\"w-5 h-5 animate-spin text-blue-500\" />;\n      case 'valid':\n        return <CheckCircle className=\"w-5 h-5 text-green-500\" />;\n      case 'invalid':\n        return <XCircle className=\"w-5 h-5 text-red-500\" />;\n      case 'missing':\n        return <AlertCircle className=\"w-5 h-5 text-yellow-500\" />;\n      default:\n        return <AlertCircle className=\"w-5 h-5 text-gray-500\" />;\n    }\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case 'high': return 'border-red-500 bg-red-500/10';\n      case 'medium': return 'border-yellow-500 bg-yellow-500/10';\n      case 'low': return 'border-green-500 bg-green-500/10';\n      default: return 'border-gray-500 bg-gray-500/10';\n    }\n  };\n\n  const validKeys = apiStatuses.filter(api => api.status === 'valid').length;\n  const totalKeys = apiStatuses.length;\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6 space-y-6\">\n      <div className=\"text-center\">\n        <h1 className=\"text-3xl font-bold mb-2\">üîë API Configuration Center</h1>\n        <p className=\"text-muted-foreground mb-4\">\n          Configure real API keys to unlock advanced AI and computer vision features\n        </p>\n        \n        <div className=\"flex justify-center gap-4 mb-6\">\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-green-500\">{validKeys}</div>\n            <div className=\"text-sm text-muted-foreground\">Configured</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-yellow-500\">{totalKeys - validKeys}</div>\n            <div className=\"text-sm text-muted-foreground\">Pending</div>\n          </div>\n        </div>\n        \n        <Button \n          onClick={checkAPIKeys} \n          disabled={isChecking}\n          className=\"mb-6\"\n        >\n          {isChecking ? (\n            <><Loader2 className=\"w-4 h-4 mr-2 animate-spin\" /> Checking APIs</>\n          ) : (\n            'Check API Status'\n          )}\n        </Button>\n      </div>\n\n      <div className=\"grid gap-4\">\n        {apiStatuses.map((api, index) => (\n          <Card key={index} className={`p-6 border-2 ${getPriorityColor(api.priority)}`}>\n            <div className=\"flex items-start justify-between mb-4\">\n              <div className=\"flex items-center gap-3\">\n                {getStatusIcon(isChecking ? 'checking' : api.status)}\n                <div>\n                  <h3 className=\"text-lg font-semibold flex items-center gap-2\">\n                    {api.name}\n                    <span className={`px-2 py-1 rounded text-xs font-medium ${\n                      api.priority === 'high' ? 'bg-red-100 text-red-800' :\n                      api.priority === 'medium' ? 'bg-yellow-100 text-yellow-800' :\n                      'bg-green-100 text-green-800'\n                    }`}>\n                      {api.priority} priority\n                    </span>\n                  </h3>\n                  <p className=\"text-sm text-muted-foreground\">{api.message}</p>\n                </div>\n              </div>\n              \n              <Button \n                variant=\"outline\" \n                size=\"sm\"\n                onClick={() => window.open(api.setupUrl, '_blank')}\n              >\n                <ExternalLink className=\"w-4 h-4 mr-1\" />\n                Get Key\n              </Button>\n            </div>\n            \n            <div className=\"grid md:grid-cols-2 gap-4\">\n              <div>\n                <h4 className=\"font-medium mb-2\">Benefits:</h4>\n                <ul className=\"text-sm text-muted-foreground space-y-1\">\n                  {api.benefits.map((benefit, i) => (\n                    <li key={i} className=\"flex items-center gap-2\">\n                      <div className=\"w-1 h-1 bg-current rounded-full\" />\n                      {benefit}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              \n              <div>\n                <h4 className=\"font-medium mb-2\">Cost:</h4>\n                <p className=\"text-sm text-muted-foreground\">{api.cost}</p>\n                \n                {api.status === 'valid' && (\n                  <div className=\"mt-2 p-2 bg-green-500/10 rounded border border-green-500/20\">\n                    <p className=\"text-sm text-green-600 font-medium\">‚úÖ Active and Working</p>\n                  </div>\n                )}\n                \n                {api.status === 'missing' && (\n                  <div className=\"mt-2 p-2 bg-yellow-500/10 rounded border border-yellow-500/20\">\n                    <p className=\"text-sm text-yellow-600 font-medium\">‚ö†Ô∏è Using fallback/demo version</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </Card>\n        ))}\n      </div>\n      \n      <Card className=\"p-6 bg-blue-500/10 border-blue-500\">\n        <h3 className=\"text-lg font-semibold mb-2\">üöÄ Quick Setup Instructions</h3>\n        <div className=\"text-sm text-muted-foreground space-y-2\">\n          <p><strong>Step 1:</strong> Click \"Get Key\" for each API you want to configure</p>\n          <p><strong>Step 2:</strong> Sign up and get your API key from each service</p>\n          <p><strong>Step 3:</strong> Update your .env file with the new keys:</p>\n          <div className=\"bg-black/20 p-3 rounded mt-2 font-mono text-xs\">\n            REACT_APP_OPENROUTER_API_KEY=sk-or-v1-your-key<br/>\n            REACT_APP_OPENAI_API_KEY=sk-your-openai-key<br/>\n            REACT_APP_REMOVE_BG_API_KEY=your-remove-bg-key\n          </div>\n          <p><strong>Step 4:</strong> Restart your application and click \"Check API Status\"</p>\n        </div>\n      </Card>\n    </div>\n  );\n}